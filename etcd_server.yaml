---
- hosts: etcd
  vars:
    etcd_conf_dir: "/etc/etcd"
    etcd_download_dir: "/opt/etcd"
    etcd_bin_dir: "/usr/local/bin"
    etcd_data_dir: "/var/lib/etcd"
    etcd_architecture: "amd64"
    etcd_version: "3.4.27"
    etcd_interface: "ens160"
    peer_client_cert_auth: true
    client_cert_auth: true
    trusted_ca_file: "{{etcd_conf_dir}}/kvdb-ca.crt"
    cert_file: "{{etcd_conf_dir}}/kvdb.crt"
    key_file: "{{etcd_conf_dir}}/kvdb.key"
    etcd_settings:
      "name": "{{ansible_hostname}}"
      #['ansible_default_ipv4']['address']
      #"listen-client-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + etcd_interface].ipv4.address + ':' + etcd_client_port + ',https://127.0.0.1:' + etcd_client_port}}"
      #"advertise-client-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + etcd_interface].ipv4.address + ':' + etcd_client_port}}"
      #"listen-peer-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + etcd_interface].ipv4.address + ':' + etcd_peer_port}}"
      #"initial-advertise-peer-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_' + etcd_interface].ipv4.address + ':' + etcd_peer_port}}"
      "listen-client-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_default_ipv4']['address'] + ':' + etcd_client_port + ',https://127.0.0.1:' + etcd_client_port}}"
      "advertise-client-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_default_ipv4']['address'] + ':' + etcd_client_port}}"
      "listen-peer-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_default_ipv4']['address'] + ':' + etcd_peer_port}}"
      "initial-advertise-peer-urls": "{{'https://' + hostvars[inventory_hostname]['ansible_default_ipv4']['address'] + ':' + etcd_peer_port}}"
      #      "initial-cluster": "{{'https://' + hostvars[inventory_hostname]['ansible_' + etcd_interface].ipv4.address + ':' + etcd_client_port + ',https://127.0.0.1:' + etcd_client_port}}"
      "initial-cluster-token": "etcd-cluster-0" # Initial cluster token for the etcd cluster during bootstrap.
      "initial-cluster-state": "new" # Initial cluster state ('new' or 'existing')
      "cert-file": "{{etcd_conf_dir}}/{{trusted_ca_file}}"
      "key-file": "{{etcd_conf_dir}}/{{key_file}}"
      "peer-cert-file": "{{etcd_conf_dir}}/{{cert_file}}"
      "peer-key-file": "{{etcd_conf_dir}}/server-key.pem"
      "trusted-ca-file": "{{etcd_conf_dir}}/{{trusted_ca_file}}"
      "peer-trusted-ca-file": "{{etcd_conf_dir}}/{{trusted_ca_file}}"
      "peer-client-cert-auth": "true" # # Enable peer client cert authentication
      "client-cert-auth": "true" # Enable client cert authentication
      "data-dir": "{{etcd_data_dir}}" # etcd data directory (etcd database files so to say)
      "wal-dir": "" # Dedicated wal directory ("" means no separated WAL directory)
      "log-level": "info" 
      #      "auto-compaction-retention": "0" # Auto compaction retention in hour. 0 means disable auto compaction.
      "snapshot-count": "100000" # Number of committed transactions to trigger a snapshot to disk
      "heartbeat-interval": "100" # Time (in milliseconds) of a heartbeat interval
      "election-timeout": "1000" # Time (in milliseconds) for an election to timeout. See tuning documentation for details
      #      "max-snapshots": "5" # Maximum number of snapshot files to retain (0 is unlimited)
      #      "max-wals": "5" # Maximum number of wal files to retain (0 is unlimited)
      #      "quota-backend-bytes": "0" # Raise alarms when backend size exceeds the given quota (0 defaults to low space quota)
      #      "logger": "zap" # Specify ‘zap’ for structured logging or ‘capnslog’.
      #      "log-outputs": "systemd/journal" # Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd
      #      "enable-v2": "true" # enable v2 API to stay compatible with previous etcd 3.3.x (needed for flannel e.g.)

    # Certificate authority and certificate files for etcd
    etcd_certificates:
      - kvdb-ca.crt               # certificate authority file
      - kvdb-ca.key
      - kvdb.crt
      - kvdb.key

  roles:
    - role: ansible-role-etcd
